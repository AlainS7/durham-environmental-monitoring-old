name: dbt-run-test
on:
  schedule:
    - cron: '5 5 * * *'
  workflow_dispatch: {}
  push:
    paths:
      - 'transformations/dbt/**'

env:
  GCP_PROJECT_ID: durham-weather-466502
  BQ_DATASET: sensors

jobs:
  run-dbt:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install base + dbt deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dbt.txt
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_VERIFIER_SA }}
          token_format: access_token
      - name: Create dbt profile
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<'EOF'
          sensor_transforms:
            target: ci
            outputs:
              ci:
                type: bigquery
                method: oauth
                project: ${{ env.GCP_PROJECT_ID }}
                dataset: ${{ env.BQ_DATASET }}
                threads: 4
                timeout_seconds: 300
                priority: interactive
                location: US
          EOF
      - name: dbt deps
        run: dbt deps --project-dir transformations/dbt
      - name: dbt run
        run: |
          PROC_DATE=$(date -u +%Y-%m-%d)
          dbt run --project-dir transformations/dbt --profiles-dir ~/.dbt \
            --vars "{proc_date: $PROC_DATE, project: ${{ env.GCP_PROJECT_ID }}}"
      - name: dbt test
        run: |
          PROC_DATE=$(date -u +%Y-%m-%d)
          dbt test --project-dir transformations/dbt --profiles-dir ~/.dbt \
            --vars "{proc_date: $PROC_DATE, project: ${{ env.GCP_PROJECT_ID }}}"
      - name: dbt source freshness
        run: |
          dbt source freshness --project-dir transformations/dbt --profiles-dir ~/.dbt \
            --vars "{project: ${{ env.GCP_PROJECT_ID }}}"
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dbt-artifacts
          path: |
            transformations/dbt/target/*.json
            transformations/dbt/target/run_results.json
      - name: Teams notify failure
        if: failure() && env.TEAMS_WEBHOOK_URL != ''
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          python scripts/notify_teams.py \
            --webhook "$TEAMS_WEBHOOK_URL" \
            --title "dbt workflow FAILED" \
            --text "Repo: $GITHUB_REPOSITORY\nSHA: $GITHUB_SHA\nRun: $GITHUB_RUN_ID"
